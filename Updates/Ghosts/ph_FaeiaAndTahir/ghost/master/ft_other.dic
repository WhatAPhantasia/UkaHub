OnTranslate
{
	_talk = reference0
	
	//This is what makes %(embedded_elements) work in script input
	if reference1 == "" && reference2 == "" //If this is from the input box
	{ //send input box : no event (ref2) , no special flag (ref1)
		_talk = EVAL('"' + REPLACE(_talk,'"','""') + '"')
	}
	
	//If you want to add anything to OnTranslate, like text replacement, I would put it after this point, generally. Just make sure it's before the TOSTR(_talk)
	
	TOSTR(_talk)
}

//This is just here so you can use anchors to link to websites if you want. You can link to websites with normal menu choice tags! If you do, a handy URL preview will show up in the balloon!
OnAnchorSelect
{
	if "http://" _in_ reference0 || "https://" _in_ reference0; "\j[""%(reference0)""]"
	else
	{
		case reference0
		{
			//==================================FAEIA QUESTIONS
			when "AFQ.Faeia"
			{
				""
				--
				"\n\n\![*]\q[Back,OnFQuestionMenu]  \![*]\q[Close,blank]"
			}
			when "AFQ.Tahir"
			{
				""
				--
				"\n\n\![*]\q[Back,OnFQuestionMenu]  \![*]\q[Close,blank]"
			}
			when "AFQ.People"
			{
				""
				--
				"\n\n\![*]\q[Back,OnFQuestionMenu]  \![*]\q[Close,blank]"
			}
			when "AFQ.Vala"
			{
				""
				--
				"\n\n\![*]\q[Back,OnFQuestionMenu]  \![*]\q[Close,blank]"
			}
			when "AFQ.Gods"
			{
				""
				--
				"\n\n\![*]\q[Back,OnFQuestionMenu]  \![*]\q[Close,blank]"
			}
			when "AFQ.World"
			{
				""
				--
				"\n\n\![*]\q[Back,OnFQuestionMenu]  \![*]\q[Close,blank]"
			}
			when "AFQ.Magic"
			{
				""
				--
				"\n\n\![*]\q[Back,OnFQuestionMenu]  \![*]\q[Close,blank]"
			}
			when "AFQ.Battle"
			{
				""
				--
				"\n\n\![*]\q[Back,OnFQuestionMenu]  \![*]\q[Close,blank]"
			}
			//==================================TAHIR QUESTIONS
			when "ATQ.Tahir"
			{
				""
				--
				"\n\n\![*]\q[Back,OnTQuestionMenu]  \![*]\q[Close,blank]"
			}
			when "ATQ.Faeia"
			{
				""
				--
				"\n\n\![*]\q[Back,OnTQuestionMenu]  \![*]\q[Close,blank]"
			}
			when "ATQ.People"
			{
				""
				--
				"\n\n\![*]\q[Back,OnTQuestionMenu]  \![*]\q[Close,blank]"
			}
			when "ATQ.Vala"
			{
				""
				--
				"\n\n\![*]\q[Back,OnTQuestionMenu]  \![*]\q[Close,blank]"
			}
			when "ATQ.Gods"
			{
				""
				--
				"\n\n\![*]\q[Back,OnTQuestionMenu]  \![*]\q[Close,blank]"
			}
			when "ATQ.World"
			{
				""
				--
				"\n\n\![*]\q[Back,OnTQuestionMenu]  \![*]\q[Close,blank]"
			}
			when "ATQ.Magic"
			{
				""
				--
				"\n\n\![*]\q[Back,OnTQuestionMenu]  \![*]\q[Close,blank]"
			}
			when "ATQ.Battle"
			{
				""
				--
				"\n\n\![*]\q[Back,OnTQuestionMenu]  \![*]\q[Close,blank]"
			}
		}
	}
}

//Hotkeys
OnKeyPress
{
	if reference0 == "f1"; "\![open,readme]"
	elseif reference0 == "t"; OnAiTalk
	elseif reference0 == "r"; OnLastTalk
}

//Happens about 30 seconds after a script ends, by default, to bring them back to normal poses
OnSurfaceRestore
{
	"\1%(tidle)\0%(fidle)"
}

//Happens when the ghost is unminimized. You *can* include dialogue, but you don't *have* to. I have included this event because if you don't, it defaults to \0\s[0]\1\s[10], which you don't want in some cases, such as if your ghost uses different surfaces or has a different number of characters.
OnWindowStateRestore
{
	"\1%(tidle)\0%(fidle)"
}

//Network update url. Make sure you have a / on the end of the url or it will give a warning every time users try to update! If you don't plan to use network updates you can remove this
//IF YOU'RE USING GITHUB FOR NETWORK UPDATES: DO NOT USE github.io URLS! It will cause you pain and suffering. USE raw.githubusercontent!!!
//To get the raw.githubusercontent link super easy:
//• Open your ghost's repo online
//• navigate to the ghost's folder (the top level one, with install.txt, readme.txt, etc)
//• Click on install.txt, or another text file on that level
//• Once on that page, click the "raw" button. You should see the url now starts with raw.githubusercontent
//• Copy that url exactly as is, but *leave off the "install.txt" or whatever file name at the end.*
//Tada! That's your url! Make sure you test it! The dev palette and script/network log can help with that
On_homeurl {"https://raw.githubusercontent.com/WhatAPhantasia/UkaHub/master/Updates/Ghosts/ph_FaeiaAndTahir/"}


//—————————————————————————————— Right click menu links ——————————————————————————————

//Takes an array of alternating names and urls, and formats them for use with the right click menu
FormatLinks : all
{
	for _i = 0; _i < ARRAYSIZE(_argv); _i++
	{
		_argv[_i] //Add the link/title
		//Alternate between adding %ASC(1) or %ASC(2)
		if _i % 2 == 1; "%ASC(2)"
		else; "%ASC(1)"
	}
}

On_sakura.recommendsites {FormatLinks(recommendsites_sakura)}
On_recommendrootbutton.caption {"Bramblebrush Links"}

//These are the websites linked in the top option of the sakura's right click menu. The format is simple; write the label of the link on the left followed by a semicolon, and then on the right, the url to link to. These should be separate strings.
recommendsites_sakura : array
{
	"Bramblebrush Toyhou.se"; "https://toyhou.se/WhatAPhantasia/characters/folder:2534157"
	"Faeia's Toyhou.se Page"; "https://toyhou.se/18058359.faeia"
}

On_sakura.portalsites {FormatLinks(portalsites_sakura)}
On_portalrootbutton.caption {"Misc Links + Credit"}

//These are the websites linked in the second option of the sakura's right click menu. Same as above
portalsites_sakura : array
{
	"Download Page"; "https://phantasiaukahub.carrd.co/#faeia-and-tahir"
	"Changelog (G. Docs)"; "https://docs.google.com/document/d/10yy69A5hkizTPMh1mmRISIDg8M3JMfOdL9abrYmme20/edit?usp=sharing"
	"Phantasia's Carrd"; "https://whataphantasia.carrd.co/"
	""; ""
	"Simplicity v1.0.3"; "https://github.com/Zichqec/simplicity_template"
	"Ukagaka Dream Team Wiki"; "https://ukagakadreamteam.com/wiki/"
}

On_kero.recommendsites {FormatLinks(recommendsites_kero)}

//These are the websites linked in the first option of the kero's right click menu. Same as above
recommendsites_kero : array
{
	"Tahir's Toyhou.se Page"; "https://toyhou.se/18059353.tahir"
}


//—————————————————————————————— User pronoun related ——————————————————————————————

they		{"%(pronouns[0])"}

them		{"%(pronouns[1])"}

their		{"%(pronouns[2])"}

theirs		{"%(pronouns[3])"}

themself	{"%(pronouns[4])"}

//%(they) %(p('are','is'))
//You can change the name of this function if you want! I kept it short so it's fast to type
p
{
	if pronouns[5] == 1; _argv[1] //they are
	else; _argv[0] //he is/she is
}

//using input cancel for firstboot, from x. template
OnUserInputCancel
{
	//OnNameTeach, close, , firstboot
	//"%(reference0)\n%(reference1)\n%(reference2)\n%(reference3)"

	if reference0 == "OnNameTeach" && reference3 == "firstboot"
	{
		"\C\![open,inputbox,OnNameTeach,-1,--reference=firstboot,--reference=1]\_l[-10000,-10000]\*\t\q[ ,__VERY_FIRST_BOOT__]"
	}
}

//Copied from the base SHIORI files
OnNotifyUserInfo : void
{
	SHIORI3FW.UserName = reference[0]
	SHIORI3FW.UserNameFull = reference[1]
	SHIORI3FW.UserBirthday = SPLIT(reference[2],',',3)
	for _i = 0 ; _i < 3 ; _i++ {
		SHIORI3FW.UserBirthday[_i] = TOINT(SHIORI3FW.UserBirthday[_i])
	}
	SHIORI3FW.UserSex = reference[3]
}