//---------------------------Mouse Functions--------------------------

//(http://www.ashido.com/ukagaka/walkthrough.html)


//--OnMouseMove
//This is a bunch of code determining who the mouse is over. Don't touch any of it.

OnMouseMove
{
	if reference3 == 0 //reference3 is what character the mouse is over. 0 is Sakura, 1 is Kero
	{
		MouseMoveSakura
	}
	else
	{
		MouseMoveKero
	}
}

//--MouseMoveSakura
//The petting function for your main character. Remember how it was referred to as sakura in some of the descript.txt and install.txt files?

//x template stuff! thanks zi
//stroke is an array here, to save on variables. stroke[0] is the original stroke value, which resets after every successful pet. stroke[1] is the continuous stroking. It's the same as stroke[0], but it does not reset until your mouse leaves the character. stroke[2] is the number of successful pets in a row. I haven't used it here but you can if you want.
MouseMoveSakura
{
	if reference4 == "Head"
	{
		stroke[0]++ //Stroke value only goes up when over the appropriate areas
		stroke[1]++
		
		if stroke[1] >= 160 //this would happen starting at 4 pets
		{
			if stroke[0] >= 160 //Stroke count is longer so that you have time to read the dialogue here. Adjust as you like.
			{
				stroke[0] = 0
				stroke[2]++
				totalpets++
				
				"\0\s[0]...Pfft, you really like doing that, huh?\w8\w8 You're on a %(stroke[2]) pet streak.\e"
			}
		}
		elseif stroke[0] >= 40
		{
			stroke[0] = 0 //Stroke value is reset
			stroke[2]++
			totalpets++
			
			//HEY REMEMBER NOT TO MAKE THIS ROMANTICALLY CODED IN FINAL RELEASE LOL
			"\0\s[2]\i[77]\i[21]\i[85]Come on, %(username)...\e"
			"\0\s[3]\i[72]\i[77]\i[85]\i[96]What kind of torture is this..?\e"
			"\0\s[0]\i[70]\i[21]\i[85]\i[92]\f[height,9]...Would you still do this even if I weren't on your desktop?\f[height,default]\e"
			"\0\s[0]\i[70]\i[21]\i[85]..."
			"\0\s[3]\i[72]\i[85]\i[65]\i[77](He just sighs. You can't tell if he's frustrated, or...)"
			"\0\s[0]\i[72]\i[85]\i[78]Just because I'm on your desktop doesn't mean you should abuse that power. \w6\i[21]\i[92]\i[70]\f[height,9]Not that I mind, but...\f[height,default]"
			"\0\s[2]\i[77]\i[21]\i[85]\i[93]..."
		}
	}
	elseif reference4 == "Face"
	{
		stroke[0]++
		
		if stroke[0] >= 40
		{
			stroke[0] = 0
			--
			if username == "Ely"
				{
				"\0\s[2]\i[72]\i[77]\i[85]"
				}
				else
				{
 				"\0\s[3]\i[70]You're messing up my glasses, you know.\e"
 				"\0\s[0]\i[76]What are you even..??\e"
 				"\0\s[3]\i[70]I'd like it if you didn't touch my face, thanks.\e"
				}
		}
	}
	elseif reference4 == "Scythe"
	{
		stroke[0]++
		
		if stroke[0] >= 40
		{
			stroke[0] = 0
			"\0\s[0]\i[76]...I don't even have a hitbox for this. How are you..??\e"
		}
	}
}

OnMouseLeaveAll //When the mouse is no longer on a hitbox. You can change to OnMouseLeave if you want it to happen when you leave any hitbox for another one
{
	if stroke[1] > 160 && stroke[1] > pethighscore[0] //Checks if you're in continuous petting, and if you are, if you got a high score.
	{
		pethighscore[0] = stroke[1]
		_b = BalloonCheck
		if _b == 1 //Checks to see if the balloon is open, and if it is, \C means this will be added onto the previous dialogue.
		{
			"\C\n\n\i[65](New high score! %(pethighscore[0])!)\e"
		}
	}
	--
	if stroke[2] > pethighscore[1] //Same thing here, but it's counting the number of successful pets you got. You can use this instead of the stroke count if you like.
	{
		pethighscore[1] = stroke[2]
	}
	--
	stroke[0] = 0
	stroke[1] = 0
	stroke[2] = 0
}

 //---- MouseMoveKero -----------------------------------------------------------------
 //MouseMoveKero is exactly like the above, except set up for your second character. 
 
MouseMoveKero
 {
	if reference4 != ""
 	{
 		stroke++
 		if stroke >= 40
		{
			stroke = 0
			if reference4 == "Face" //Put in the name of your collision area you set up for your secondary character here.
 			{
				"\1\s[10]This is a face touching dialogue.\e"
				"\1\s[10]This is another face touching dialogue.\e"
				"\1\s[10]This is yet another face touching dialogue.\e"
 			}
			elseif reference4 == "Point" //Like above, put in the name of another collision you set up in surfaces.txt for the secondary character. You can keep adding more elseifs like this for any extra collisions you may have set up.
			{
				"\1\s[10]This is a point touching dialogue since I don't really have a head, being a triangle.\e"
				"\1\s[10]This is another point touching dialogue.\e"
				"\1\s[10]This is yet another point touching dialogue.\e"
			}	
 		}
	}
 	else
	{
 		// If the mouse isn't over the ghost, it'll zero out the stroke value.
		stroke = 0
 	}
}

//---- OnMouseDoubleClick -------------------------------------------------------
//This is set up much like OnMouseMove above, except this is checking to see if the user is double clicking on the ghost. You also don't need to touch any of this. 
//Advanced users adding a third character, the same principles from OnMouseMove apply here as well! Make sure to add an elseif with the right number for your third character.

OnMouseDoubleClick
{
	if reference5 == 0 //reference5 is the mouse button being clicked, in this case a left click. Also checks to see if this is during the first boot, and if so, prevents the menus from being opened
	{
		if reference3 == 0 //this is the character, as above
		{
			MouseDoubleClickSakura
		}
		else
		{
			MouseDoubleClickKero
		}
	}
}

MouseDoubleClickSakura
{
	if reference4 == "Face" //Punching dialogue
	{
		if totalpunches < 1 //If the user has not punched the ghost yet
		{
			"\0(Are you sure you want to punch him in the face?)"
			--
			"\n\n\_q\![*]\q[Yes,FirstPunch] \![*]\q[No!,cancelnodialogue]"
		}
		else //If they've already punched the ghost at least once
		{
			"\0\s[3]\i[70]smh i cant believe u would punch me............\e"
			totalpunches++
		}
	}
	else //If you're not punching, you must want the menu
	{
		OpenSakuraMenu
	}
}

Select.FirstPunch //The first time the ghost is punched
{
	"\0\s[0]...Oh. You're just like them. Fuck you \i[65](CHANGE LATER LOL)\e"
	totalpunches++
}

 
 //---- MouseDoubleClickKero -----------------------------------------------------------
 //This is just the same as MouseDoubleClickSakura above, except for your secondary character. The same principles apply, including how to make your character unhittable.
 
 
MouseDoubleClickKero
{
 	if reference4 == "Face" //Punching dialogue
	{
		if totalpunches < 1 //If the user has not punched the ghost yet
		{
			"\1(Are you sure you want to punch them in the face?)"
			--
			"\n\n\_q\![*]\q[Yes,FirstPunchKero] \![*]\q[No!,cancelnodialogue]"
		}
		else //If they've already punched the ghost at least once
		{
			"\1oh... ow....\e"
			totalpunches++
		}
	}
	else //If you're not punching, you must want the menu
	{
		OpenKeroMenu
	}
}

Select.FirstPunchKero
{
	"\1Ow!! Dude, what the heck??\e"
	totalpunches++
}
 
//--------Ok now its time to get funky

//this one got complicated so i moved it to etc.dic (will probably move it back tbh)
